version: 2
jobs:
  build:
    parallelism: 1
    docker:
      - image: circleci/elixir:1.8
        environment:
          MIX_ENV: test

    working_directory: ~/minesweeper

    steps:
      - checkout

      - run: mix local.hex --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache

      - run: mix do deps.get, compile

      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run: mix test

      - store_test_results:
          path: _build/test/lib/minesweeper

  deploy:
    docker:
      - image: circleci/elixir:1.8
    steps:
      - checkout

      - run: mix local.hex --force

      - restore_cache:
          keys:
            - v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
            - v1-mix-cache-{{ .Branch }}
            - v1-mix-cache
      - restore_cache:
          keys:
            - v1-build-cache-{{ .Branch }}
            - v1-build-cache

      - run: mix do deps.get, compile

      - save_cache:
          key: v1-mix-cache-{{ .Branch }}-{{ checksum "mix.lock" }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache-{{ .Branch }}
          paths: "deps"
      - save_cache:
          key: v1-mix-cache
          paths: "deps"
      - save_cache:
          key: v1-build-cache-{{ .Branch }}
          paths: "_build"
      - save_cache:
          key: v1-build-cache
          paths: "_build"

      - run: echo "deploying circleci-deploy-workflow" # change to master

      - run:
          name: Get Minesweeper Version
          command: |
            VERSION=`mix ex_app_info.version.get`
            echo "export VERSION=$VERSION" >> $BASH_ENV
            source $BASH_ENV
            echo "Minesweeper Version is v${VERSION}"

      - add_ssh_keys:
          fingerprints:
            - "7f:2b:da:23:1b:e3:11:76:7c:83:b7:c5:eb:40:25:e4"

      - run:
          name: Create and Push Git Tag
          command: |
            git config --global user.email "${GIT_USER_EMAIL}"
            git config --global user.name "${GIT_USER_NAME}"
            git tag -a v${VERSION} -m "something"
            git push origin v${VERSION}
        # skip build when pushing new git tag?
        # https://circleci.com/docs/2.0/skip-build/#skipping-a-build
        # actually don't think I need to: https://circleci.com/docs/2.0/configuration-reference/#tags

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: circleci-deploy-workflow # change to master
